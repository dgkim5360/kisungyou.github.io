{
  "hash": "d796f0f957fb2954567f295ed839331e",
  "result": {
    "markdown": "---\ntitle: \"Monte Carlo computation of $L_p$ distance between two densities on the unit hypersphere\"\ndescription: \" \" \ndate: 2022-08-09\ncategories:\n  - notes\n  - geometric statistics\n  - computation\nformat: \n  html:\n    df-print: paged\n    toc: true\n  pdf: \n    toc: false\n    papersize: a4\n    colorlinks: true\n    pdf-engine: pdflatex\n    fontfamily: lmodern\n    fontsize: 11pt\n    linestretch: 1.25\n    geometry: \n      - margin=2cm\n      - heightrounded\nengine: knitr\ncitation: true\ngoogle-scholar: true\nnumber-sections: false\n---\n\n\n## Problem Statement\n\nA $d$-dimensional unit hypersphere $\\mathbb{S}^d = \\lbrace x \\in \\mathbb{R}^{d+1}~|~ \\|x\\|_2^2 = \\sum_{i=1}^{d+1} x_i^2 = 1\\rbrace$ is \none of the standard mathematical spaces in the field of [objected-oriented data analysis](https://doi.org/10.1201/9781351189675). Let $\\mathcal{P}(\\mathbb{S}^d)$ denote a space of probability densities on $\\mathbb{S}^d$. For two densities $f,g\\in\\mathcal{P}(\\mathbb{S}^d)$, \nit is frequently needed to measure dissimilarity between the two. Unfortunately, even for the most well-known distributions on the hypersphere, \nanalytic formula for any discrepancy measure is rarely available, leading to require numerical schemes for approximation. Here we focus on \n$L_p$ distance between the two densities,\n\n$$\nL_p (f,g) = \\left( \\int_{\\mathbb{S}^d} |f(x) - g(x)|^p \\right)^{1/p}\n$$ {#eq-objective}\n\nand we show how to combine Monte Carlo way of integration by means of [importance sampling](https://en.wikipedia.org/wiki/Importance_sampling) to approximate @eq-objective.\n\n## Computation\n\nImportance sampling requires a proposal density. The easiest choice is to use uniform density $u(x)$ as an importance proposal since sampling from $u(x)$ is trivial. First, take a random sample from standard normal distribution $x \\sim \\mathcal{N}(0,I)$ in $\\mathbb{R}^{d+1}$. Then, the rest is to take $L_2$ normalization, i.e., $x \\leftarrow x / \\|x\\|_2$, which makes a sampled vector to have a unit norm. Given the sample generation process, we have the following\n\n$$\\begin{aligned}\nL_p (f,g)^p &= \\int_{\\mathbb{S}^d} |f(x)-g(x)|^p dx \\\\ \n&= \\int_{\\mathbb{S}^d} \\frac{|f(x)-g(x)|^p}{u(x)} u(x)  dx \\\\\n&= \\mathbb{E}_{u(x)} \\left\\lbrack \\frac{|f(x)-g(x)|^p}{u(x)} \\right\\rbrack\\\\\n&\\approx \\frac{1}{N} \\sum_{n=1}^N \\frac{|f(x)-g(x)|^p}{u(x)} \\,\\,\\textrm{for}\\,\\, x_n \\overset{iid}{\\sim} u(x),\n\\end{aligned}\n$$\n\nwhere the last term gets better approximation as $N\\rightarrow \\infty$.\n\n## Example\n\n\n# Download the note\n::: {.content-visible unless-format=\"pdf\"}\nIf you would like to download the pdf version of this note, [click here](index.pdf).\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}