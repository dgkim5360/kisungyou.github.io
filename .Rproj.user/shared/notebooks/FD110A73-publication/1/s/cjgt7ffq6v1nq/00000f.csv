"0","reticulate::repl_python()"
"2","Registered S3 methods overwritten by 'htmltools':
  method               from         
  print.html           tools:rstudio
  print.shiny.tag      tools:rstudio
  print.shiny.tag.list tools:rstudio
"
"0","import yaml"
"0","from IPython.display import display, Markdown, HTML"
"0","def readable_list(_s):"
"0","  if len(_s) < 3:"
"0","    return ' and '.join(map(str, _s))"
"0","  *a, b = _s"
"0","  return f""{', '.join(map(str, a))}, and {b}"""
"0","def button(url, str, icon):"
"0","    icon_base = icon[:2]"
"0","    return f""""""<a class=""btn btn-outline-dark btn-sm"", href=""{url}"" target=""_blank"" rel=""noopener noreferrer"">"
"0","        <i class=""{icon_base} {icon}"" role='img' aria-label='{str}'></i>"
"0","        {str}"
"0","    </a>"""""""
"0","yaml_data = yaml.safe_load(open(""list_publication.yaml""))"
"0","pub_strs = {""type-journal"":{}, ""type-preprint"":{}, "
"0","             ""type-submitted"":{}, ""type-preparation"":{}}"
"0",""
"0","for _, data in yaml_data.items():"
"0","    # extract relevant information"
"0","    title_str = data[""title""]"
"0","    authors = data.get(""authors"", [""me""])"
"0","    authors = [aut if aut != ""me"" else ""<strong>KY</strong>"" for aut in authors]"
"0","    author_str = readable_list(authors)"
"0","    year_str = data[""year""]"
"0","    buttons = []"
"0","    preprint = data.get(""preprint"")"
"0","    if preprint is not None:"
"0","        buttons.append(button(preprint, ""arXiv"", ""bi-file-earmark-pdf""))"
"0","    github = data.get(""github"")"
"0","    if github is not None:"
"0","        buttons.append(button(github, ""Code"", ""bi-github""))"
"0","    pub_url = data.get(""published_url"")"
"0","    venue = data.get(""venue"")"
"0","    flag  = data.get(""flag"")"
"0","    "
"0","    "
"0","    # DIFFERENT TYPES"
"0","    # 1. journal  {journal}"
"0","    # 2. preprint {preprint}"
"0","    # 3. progress {submitted, preparation}"
"0","    "
"0","    "
"0","    # TYPES-strings"
"0","    if flag==""journal"":"
"0","      pub_str = f'<b>{title_str}</b><br> {author_str}. <br> <em>{venue}</em> ({year_str}).'"
"0","    elif flag==""preprint"":"
"0","      pub_str = f'<b>{title_str}</b><br> {author_str} ({year_str}).'"
"0","    elif flag==""submitted"":"
"0","      pub_str =  f'<b>{title_str}</b><br> {author_str} <br> Submitted to <em>{venue}</em>.'"
"0","    elif flag==""preparation"":"
"0","      pub_str =  f'<b>{title_str}</b><br> {author_str} <br> <em>In Preparation.</em>'"
"0","      "
"0","      "
"0","    # TYPES-formatting"
"0","    if flag==""journal"":"
"0","      if year_str not in pub_strs[""type-journal""]:"
"0","        pub_strs[""type-journal""][year_str] = []"
"0","      buttons.append(button(pub_url, ""Publisher's Site"", ""ai-archive""))"
"0","      pub_strs[""type-journal""][year_str].append(""<li class='list-group-item'>"" + pub_str + ""<br>"" + "" "".join(buttons) + ""</li>"")"
"0","    elif flag==""preprint"":"
"0","      if year_str not in pub_strs[""type-preprint""]:"
"0","        pub_strs[""type-preprint""][year_str] = []"
"0","      pub_strs[""type-preprint""][year_str].append(""<li class='list-group-item'>"" + pub_str + ""<br>"" + "" "".join(buttons) + ""</li>"")"
"0","    elif flag==""submitted"":"
"0","      if year_str not in pub_strs[""type-submitted""]:"
"0","        pub_strs[""type-submitted""][year_str] = []"
"0","      pub_strs[""type-submitted""][year_str].append(""<li class='list-group-item'>"" + pub_str + ""<br>"" + "" "".join(buttons) + ""</li>"")"
"0","    elif flag==""preparation"":"
"0","      if year_str not in pub_strs[""type-preparation""]:"
"0","        pub_strs[""type-preparation""][year_str] = []"
"0","      pub_strs[""type-preparation""][year_str].append(""<li class='list-group-item'>"" + pub_str + ""<br>"" + "" "".join(buttons) + ""</li>"")"
"0","        "
